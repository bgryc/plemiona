(function(){if(game_data.device!=="desktop"){return UI.ErrorMessage("This script works only on the desktop version.")}if(game_data.screen!=="am_farm"){return UI.ErrorMessage("Please run this script in the assistant farmer screen.")}(function levelBuildingsAF(){const availableBuildings=["Ratusz","Koszary","KuÅºnia","Plac","Rynek","Tartak"];let selectedBuilding="Koszary";function refreshBuildingData(){document.querySelectorAll(".building-level-cell").forEach(cell=>cell.remove());loadBuildingLevels()}const farmTable=document.querySelector("#plunder_list");if(!farmTable){return console.warn("Assistant farmer table not found.")}let headerRow=farmTable.querySelector("thead tr")||farmTable.querySelector("tbody tr");if(!headerRow){return console.warn("Assistant farmer table header not found.")}const selectCell=document.createElement("th");const select=document.createElement("select");select.id="buildingSelector";availableBuildings.forEach(building=>{const option=document.createElement("option");option.value=building;option.textContent=building;select.appendChild(option)});select.value=selectedBuilding;select.addEventListener("change",()=>{selectedBuilding=select.value;console.log(`Selected building: ${selectedBuilding}`);refreshBuildingData()});selectCell.appendChild(select);headerRow.appendChild(selectCell);async function loadBuildingLevels(){const reportLinks=[...document.querySelectorAll("a[href*='screen=report'][href*='view=']")].map(a=>({href:a.href,element:a}));for(let{href,element}of reportLinks){try{console.log(`Fetching report: ${href}`);const response=await fetch(href);const text=await response.text();const parser=new DOMParser();const doc=parser.parseFromString(text,"text/html");const tables=["#attack_spy_buildings_left","#attack_spy_buildings_right"];let buildingLevel="?";for(let tableId of tables){const table=doc.querySelector(tableId);if(table){const rows=table.querySelectorAll("tr");for(let row of rows){const buildingName=row.query...
